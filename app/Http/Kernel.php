<?php

namespace App\Http;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

class Kernel extends HttpKernel
{
    /**
     * The application's global HTTP middleware stack.
     *
     * These middleware are run during every request to your application.
     *
     * @var array<int, class-string|string>
     */
    protected $middleware = [
        // \App\Http\Middleware\TrustHosts::class,
        \App\Http\Middleware\TrustProxies::class,
        // crucial when your app is deployed behind a proxy or a load balancer (like cloud hosting services)
        \Illuminate\Http\Middleware\HandleCors::class,
        // manages Cross-Origin Resource Sharing (CORS) headers,
        // if it's not enabled, any front-app on other server can't get a response from your app.
        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
        // if the app in maintainence mode(php artisan down), it prevent users from accessing it
        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
        // if user's post request exceeds the post_max_size in php.ini => Laravel will throw an error
        \App\Http\Middleware\TrimStrings::class,
        // trims whitespace from the begin and at the end of all string fields in the incoming request.
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
        // if user don't fill the input
        // \App\Http\Middleware\UpdateUserLastActiveAt::class, // cann't check who is the logged in user from here
    ];

    /**
     * The application's route middleware groups.
     *
     * @var array<string, array<int, class-string|string>>
     */
    protected $middlewareGroups = [
        'web' => [
            \App\Http\Middleware\EncryptCookies::class,
            // encrypts all cookies generated by app, preventing anyone from reading or tampering with their values.
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            // add any cookies that have been queued (during the request processing) to the HTTP response.
            \Illuminate\Session\Middleware\StartSession::class,
            // starts and manages the session for each request
            // Laravel stores session data on the server side (file-based, database, Redis, etc.),
            // and the session ID is stored in a cookie in the user's browser.
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            // shares validation errors from the session to the views,
            \App\Http\Middleware\VerifyCsrfToken::class,
            // Protects against CSRF attacks by verifying that all POST requests contain a valid CSRF token.
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
            // route model binding, allows Laravel to automatically resolve route parameters into models
            \App\Http\Middleware\UpdateUserLastActiveAt::class,
        ],

        'api' => [
            // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
            \Illuminate\Routing\Middleware\ThrottleRequests::class.':api',
            // restricting the number of requests from a particular IP address or user
            // that helps prevent abuse (e.g., spamming or DoS attacks).
            // you can customize the limits by user, route, or IP address.
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
            // route model binding, allows Laravel to automatically resolve route parameters into models
        ],
    ];

    /**
     * The application's middleware aliases.
     *
     * Aliases may be used to conveniently assign middleware to routes and groups.
     *
     * @var array<string, class-string|string>
     */
    protected $middlewareAliases = [
        'auth' => \App\Http\Middleware\Authenticate::class,
        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
        'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
        'can' => \Illuminate\Auth\Middleware\Authorize::class,
        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
        'signed' => \App\Http\Middleware\ValidateSignature::class,
        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
        'auth.type' => \App\Http\Middleware\CheckUserType::class,
    ];
}
